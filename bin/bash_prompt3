#!/bin/bash

################# terminfo colors-16
#
#       black?    0 8
#       red       1 9
#       green     2 10
#       yellow    3 11
#       blue      4 12
#       magenta   5 13
#       cyan      6 14
#       white     7 15
#
#       terminfo setaf/setab - sets ansi foreground/background
#       terminfo sgr0 - resets all attributes
#       terminfo colors - number of colors
#
#################  Colors-256
#  To use foreground and background colors:
#       Set the foreground color to index N:    \033[38;5;${N}m
#       Set the background color to index M:    \033[48;5;${M}m
# To make vim aware of a present 256 color extension, you can either set
# the $TERM environment variable to xterm-256color or use vim's -T option
# to set the terminal. I'm using an alias in my bashrc to do this. At the
# moment I only know of two color schemes which is made for multi-color
# terminals like urxvt (88 colors) or xterm: inkpot and desert256,

### if term support colors,  then use color prompt, else bold

#              black='\['`tput sgr0; tput setaf 0`'\]'
#                red='\['`tput sgr0; tput setaf 1`'\]'
#              green='\['`tput sgr0; tput setaf 2`'\]'
#             yellow='\['`tput sgr0; tput setaf 3`'\]'
#               blue='\['`tput sgr0; tput setaf 4`'\]'
#            magenta='\['`tput sgr0; tput setaf 5`'\]'
#               cyan='\['`tput sgr0; tput setaf 6`'\]'
#              white='\['`tput sgr0; tput setaf 7`'\]'
#
#              BLACK='\['`tput setaf 0; tput bold`'\]'
#                RED='\['`tput setaf 1; tput bold`'\]'
#              GREEN='\['`tput setaf 2; tput bold`'\]'
#             YELLOW='\['`tput setaf 3; tput bold`'\]'
#               BLUE='\['`tput setaf 4; tput bold`'\]'
#            MAGENTA='\['`tput setaf 5; tput bold`'\]'
#               CYAN='\['`tput setaf 6; tput bold`'\]'  # why 14 doesn't work?
#              WHITE='\['`tput setaf 7; tput bold`'\]'
#
#            bw_bold='\['`tput bold`'\]'



function prompt_command_function() {

  if [ "$USERNAME" == "root" ]
  then
    una='\['`tput sgr0; tput setaf 1`'\]' #red
  else
    una='\['`tput sgr0; tput setaf 6`'\]' #cyan
  fi
  reset='\['`tput sgr0`'\]'
  yellow='\['`tput sgr0; tput setaf 3`'\]'

  eval 'echo -ne "\033]0;${USER}@${HOSTNAME} - ${PWD}\007"'
  PS1="${yellow}${GIT_STATUS}${una}Â» ${reset}"
}

PROMPT_COMMAND=prompt_command_function
