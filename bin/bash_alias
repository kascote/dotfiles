###########
# GENERAL #
###########
export TERM=xterm-color
alias l='ls -lh'                             # l for list style, a for all including hidden, h for human readable file sizes
alias la='l -a'                              # l for list style, a for all including hidden, h for human readable file sizes
alias lo='l -ot'                             # order by time
alias l.="ls -d .*"                          # show only dirs
alias h='history'                            # shortcut for history
alias c='clear'                              # shortcut to clear your terminal
alias ..='cd ..'                             # move up 1 dir
alias ...='cd ../..'                         # move up 2 dirs
alias ....='cd ../../..'                     # move up 3 dirs
alias rbash='source ~/bin/bash_alias'        # after editing you have to source it for the new stuff to work
alias ducks='du -cksh * | sort -rn|head -11' # Lists folders and files sizes in the current folder
alias du1='du -h --max-depth=1'
alias grep='grep --color=auto'
# Shows most used commands, cool script I got this from: http://lifehacker.com/software/how-to/turbocharge-your-terminal-274317.php
alias profileme="history | awk '{print \$2}' | awk 'BEGIN{FS=\"|\"}{print \$1}' | sort | uniq -c | sort -n | tail -n 20 | sort -nr"
#alias apti="aptitude -F \"%p %V %v\" search "  # show the instaled version and the available one
alias apti="aptitude -F \"%c%a%M%S %p %Z %v %V\" search "  # show the instaled version and the available one
#alias ps="ps wwwax -o user,pid,ppid,cpu,nice,state,command"
alias psgrep='ps aux|grep'
alias reload='source ~/.bashrc'
alias le='less -fir'
#search on history.... ![number] to execute command on history
alias go='gnome-open'
alias gn='find . -iname'

# --------[ Rails ]-----------------------------------------------------------------
alias ss='./script/server'               
alias sc='./script/console'              
alias tlog='tail -f log/development.log'
alias rst='touch tmp/restart.txt'

# --------[ GIT ]-----------------------------------------------------------------
alias gw="git whatchanged -p"
alias gl="git log --graph"
alias grm="git status | grep deleted | awk '{print \$3}' | xargs git rm"
alias git-score="git log | grep '^Author' | sort | uniq -ci | sort -r"
alias gdiff='git diff | vimdiff -'

export PATH=$PATH:/opt/ruby-enterprise/bin

export HISTCONTROL=ignoredups
# Maximum number of events saved between sessions
export HISTFILESIZE=100000
# Maximum number of events saved during a session
export HISTSIZE=100000
export EDITOR='vim'  #Command line
export SVN_EDITOR='${EDITOR}'
export PAGER='less -firwX'
export MANPAGER='less -firwX'

# bash completion settings (actually, these are readline settings)
bind "set completion-ignore-case on" # note: bind used instead of sticking these in .inputrc
bind "set bell-style none"
bind "set show-all-if-ambiguous On"

# shell options
shopt -s no_empty_cmd_completion >/dev/null 2>&1


set -o vi
# enable support for eight bits characters
set meta-flag on
set input-meta on
set output-meta on
# no convert output to ascii, use eight bits
set convert-meta off

eval `dircolors ~/bin/colors_db`

#function sf()
#{
#  svn st | grep \? | sed '/images\/[0-9]\+$/d' | sed '/\.swp/d'
#}
function hf()
{
  history | grep $1
}
function rro()
{
  rake routes | grep $1
}
# git diff is using vimdif... this function is to get original git diff functionality
function git_diff() {
  git diff --no-ext-diff -w "$@" | vim -R -
}

SSH_COMPLETE=( $(cat ~/.ssh/known_hosts | \
  cut -f 1 -d ' ' | \
  sed -e s/,.*//g | \
  uniq | \
  egrep -v [0123456789]) )
complete -o default -W "${SSH_COMPLETE[*]}" ssh

#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[31m\]$(__git_ps1 "(%s)")\[\033[00m\]\n$ '

# taked from http://github.com/mikewest/homedir/blob/master/etc/bash/rc/git
function git_status_prompt {
    local curdir=`pwd`
    local repository_base="/vault/Projects"
    [[ ! $curdir =~ ^$repository_base ]] && return
    git rev-parse --git-dir &> /dev/null
    git_status="$(git status 2> /dev/null)"
    branch_pattern="^# On branch ([^${IFS}]*)"
    remote_pattern="# Your branch is (.*) of"
    diverge_pattern="# Your branch and (.*) have diverged"
    if [[ ! ${git_status} =~ "working directory clean" ]]; then
        state="⚡ "
    fi
    if [[ ${git_status} =~ ${remote_pattern} ]]; then
        if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
            remote="↑ "
        else
            remote="↓ "
        fi
    fi
    if [[ ${git_status} =~ ${diverge_pattern} ]]; then
        remote="↕ "
    fi
    if [[ ${git_status} =~ ${branch_pattern} ]]; then
        branch="(${BASH_REMATCH[1]}) "
        # [ "$branch" = "(master) " ] && branch=''
        echo "${branch}${remote}${state}"
    fi
}
GIT_STATUS='$(git_status_prompt)'

. ~/bin/bash_prompt3
