platform=`uname`
###########
# GENERAL #
###########
export TERM=xterm-color
if [[ $platform == 'Darwin' ]]; then
alias l='ls -Glh'                             # l for list style, a for all including hidden, h for human readable file sizes
else
alias l='ls -lh'                             # l for list style, a for all including hidden, h for human readable file sizes
fi
alias la='l -a'                              # l for list style, a for all including hidden, h for human readable file sizes
alias lo='l -ot'                             # order by time
alias l.="ls -d .*"                          # show only dirs
alias h='history'                            # shortcut for history
alias c='clear'                              # shortcut to clear your terminal
alias ..='cd ..'                             # move up 1 dir
alias ...='cd ../..'                         # move up 2 dirs
alias ....='cd ../../..'                     # move up 3 dirs
alias rbash='source ~/bin/bash_alias'        # after editing you have to source it for the new stuff to work
alias ducks='du -cksh * | sort -rn|head -11' # Lists folders and files sizes in the current folder
alias du1='du -h --max-depth=1'
alias grep='grep --color=auto'
# Shows most used commands, cool script I got this from: http://lifehacker.com/software/how-to/turbocharge-your-terminal-274317.php
alias profileme="history | awk '{print \$2}' | awk 'BEGIN{FS=\"|\"}{print \$1}' | sort | uniq -c | sort -n | tail -n 20 | sort -nr"
#alias apti="aptitude -F \"%p %V %v\" search "  # show the instaled version and the available one
alias apti="aptitude -F \"%c%a%M%S %p %d %Z %v %V\" search "  # show the instaled version and the available one
#alias ps="ps wwwax -o user,pid,ppid,cpu,nice,state,command"
alias psgrep='ps aux|grep'
alias reload='source ~/.bashrc'
alias le='less -fir'
#search on history.... ![number] to execute command on history
alias go='gnome-open'
alias gn='find . -iname'
# show web traffic
alias httpdump='sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E "Host\: .*|GET \/.*"'
alias hd='od -Ax -tx1z -v'                  # hex dump
# Use vim to browse man pages. One can use Ctrl-[ and Ctrl-t
# to browse and return from referenced man pages. ZZ or q to quit.
# Note initially within vim, one can goto the man page for the
# word under the cursor by using [section_number]K.
# Note we use bash explicitly here to support process substitution
# which in turn suppresses the "Vim: Reading from stdin..." warning.
# http://www.pixelbeat.org/settings/.bashrc
#export MANPAGER='bash -c "vim -MRn -c \"set ft=man nomod nolist nospell nonu\" -c \"nm q :qa!<CR>\" -c \"nm <end> G\" -c \"nm <home> gg\"</dev/tty <(col -b)"'

#alias gvim='/Applications/MacVim.app/Contents/MacOS/Vim -g'
alias http_here='python -c "import SimpleHTTPServer;SimpleHTTPServer.test()"'
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'
alias timestamp="date +%Y%m%d%H%M%S"
# Recursively delete `.DS_Store` files
alias clean-dsstore="find . -type f -name '*.DS_Store' -ls -delete"
# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'
alias flushcache='sudo killall -HUP mDNSResponder'

# --------[ Rails ]-----------------------------------------------------------------
alias ss="[ -e script/server ] && script/server || rails server"
alias sc="[ -e script/console ] && script/console || rails console"
alias tlog='tail -f log/development.log'
alias rst='touch tmp/restart.txt'
alias rr='rake routes | grep '
alias rdm='rake db:migrate'

# --------[virtualbox]------------------
alias vbs="VBoxHeadless -v off -s "


rdmdown (){
  rake db:migrate:down VERSION=$@
}
rdmup (){
  rake db:migrate:up VERSION=$@
}


# --------[ GIT ]-----------------------------------------------------------------
alias gw="git whatchanged -p"
alias gl="git log --graph"
alias grm="git status | grep deleted | awk '{print \$3}' | xargs git rm"
alias git-score="git log | grep '^Author' | sort | uniq -ci | sort -r"
alias gdiff='git diff | vimdiff -'

export HISTCONTROL=ignoredups
# Maximum number of events saved between sessions
export HISTFILESIZE=100000
# Maximum number of events saved during a session
export HISTSIZE=100000
export EDITOR='vim'  #Command line
export SVN_EDITOR='${EDITOR}'
export PAGER='less -firwX'
#export MANPAGER='less -firwX'

# bash completion settings (actually, these are readline settings)
bind "set completion-ignore-case on" # note: bind used instead of sticking these in .inputrc
bind "set bell-style none"
bind "set show-all-if-ambiguous On"

# shell options
shopt -s no_empty_cmd_completion >/dev/null 2>&1

set -o vi
# enable support for eight bits characters
set meta-flag on
set input-meta on
set output-meta on
# no convert output to ascii, use eight bits
set convert-meta off

if [[ $platform == 'Darwin' ]]; then
  . ~/bin/colors
elif [[ $platform == 'Linux' ]]; then
  eval `dircolors ~/bin/colors_db`
fi

# All the dig info
function digga() {
  dig +nocmd "$1" any +multiline +noall +answer
}
# Escape UTF-8 characters into their 3-byte format
function escape() {
  printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u)
  echo # newline
}

# Decode \x{ABCD}-style Unicode escape sequences
function unidecode() {
  perl -e "binmode(STDOUT, ':utf8'); print \"$@\""
  echo # newline
}

# Get a character’s Unicode code point
function codepoint() {
  perl -e "use utf8; print sprintf('U+%04X', ord(\"$@\"))"
  echo # newline
}

#function sf()
#{
#  svn st | grep \? | sed '/images\/[0-9]\+$/d' | sed '/\.swp/d'
#}
function hf()
{
  history | grep "$@"
}
# git diff is using vimdif... this function is to get original git diff functionality
function git_diff() {
  git diff --no-ext-diff -w "$@" | vim -R -
}
# find user with open ports
findportuser() {
  lsof -i :"$1"
}

SSH_COMPLETE=( $(cat ~/.ssh/known_hosts | \
  cut -f 1 -d ' ' | \
  sed -e s/,.*//g | \
  uniq | \
  egrep -v [0123456789]) )
complete -o default -W "${SSH_COMPLETE[*]}" ssh

#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[31m\]$(__git_ps1 "(%s)")\[\033[00m\]\n$ '

# taked from http://github.com/mikewest/homedir/blob/master/etc/bash/rc/git
function git_status_prompt {
   git rev-parse --git-dir &> /dev/null
   [ $? -ne 0 ] && return
   git_status="$(git status 2> /dev/null)"
   branch_pattern="^# On branch ([^${IFS}]*)"
   if [[ ! ${git_status} =~ "working directory clean" ]]; then
       state="⚡ "
   fi
   if [[ ${git_status} =~ "# Your branch is (.*) of" ]]; then
       if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
           remote="↑ "
       else
           remote="↓ "
       fi
   fi
   if [[ ${git_status} =~ "# Unmerged paths:" ]]; then
     remote="[conflict] "
   fi
   if [[ ${git_status} =~ "# Your branch and (.*) have diverged" ]]; then
       remote="↕ "
   fi
   if [[ ${git_status} =~ ${branch_pattern} ]]; then
       branch="(${BASH_REMATCH[1]}) "
       # [ "$branch" = "(master) " ] && branch=''
       echo "${branch}${remote}${state}"
   else
       if [[ ${git_status} =~ "Not currently on any branch." ]]; then
         echo "(no branch) ${remote}${state}"
       fi
   fi
}
GIT_STATUS='$(git_status_prompt)'

. ~/bin/bash_prompt3

