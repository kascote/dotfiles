unbind C-b
set -g prefix C-Space

# change command delay
set -s escape-time 0
# set vim keybiding on command prompt
set -g status-keys vi
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",screen-256color:Tc"
set -g history-limit 262144
set -g default-command "${SHELL}"

# use vim motion keys while in copy mode
setw -g mode-keys vi
# Set window notifications
setw -g monitor-activity off

# rename windows to current command
setw -g automatic-rename off
# focus events enabled for terminals that support them
set -g focus-events on
# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# enable mouse
set -g mouse on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off


# ---- BINDINGS ----

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# alternaly last 2 layouts
bind u select-layout -o
# Fast toggle (normally prefix-l).
bind C-space last-window

# rotate panes on window
bind C-i rotate-window -U
bind C-o rotate-window -D

# move between windows
bind C-h select-window -t :-
bind C-l select-window -t :+


# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5


# force a reload of the config file
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# vimify the buffer keys
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t{mouse} -X clear-selection\; send-keys -t{mouse} -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# bind -t vi-copy 'v' begin-selection
# unbind -t vi-copy Enter
# bind -t vi-copy Enter copy-pipe "nc localhost 8377"

bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"
# "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -U ~/.cache/clipper/clipper.sock"


# extra commands for interacting with the ICCCM clipboard
#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# toggle zoom current pane
unbind C-z
bind C-z resize-pane -Z

# move between sessions
bind -r z switch-client -p
bind -r x switch-client -n

# pane movement
bind-key ° command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key | command-prompt -p "send pane to:"  "join-pane -t '%%'"

# bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-k" "select-pane -U"
bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-j" "select-pane -D"
bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-h" "select-pane -L"
bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-l" "select-pane -R"

#------------ THEME

# renumber windows sequentially after closing any of them
set -g renumber-windows on
## starts windows at 1 not 0
set -g base-index 1
setw -g pane-base-index 1
## set window notifications
set -g visual-activity on
#set -g visual-content on
set -g status-interval 5
# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# Basic status bar colors
set -g status-bg "#000000"
set -g status-fg cyan
# Left side of status bar
set -g status-left-bg "#000000"
set -g status-left-fg green
set -g status-left-length 40
set -g status-left "#S #[fg=white]» "
# Right side of status bar
set -g status-right-bg "#000000"
set -g status-right-fg cyan
set -g status-right-length 40
set -g status-right "#H #[fg=white]« #[fg=yellow]%H:%M #[fg=green]%d-%b-%y"

# Window status
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#[fg=cyan]#W#[fg=yellow]#F "
setw -g window-status-bg '#000000'
setw -g window-status-fg black
setw -g window-status-attr bold
# Current window status
set -g window-status-current-bg "#000000"
set -g window-status-current-fg white
# Window with activity status
set -g window-status-activity-bg "#000000"
set -g window-status-activity-fg yellow
# Window separator
set -g window-status-separator ""
# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore
# Window status alignment
set -g status-justify left

set -g set-titles on
set -g set-titles-string '[#I] #S > #W #T'

# Pane border
set -g pane-border-bg default
set -g pane-border-fg default
# Active pane border
set -g pane-active-border-bg default
set -g pane-active-border-fg green
# Pane number indicator
set -g display-panes-colour white
set -g display-panes-active-colour magenta
set -g display-panes-time 2000

# Clock mode
set -g clock-mode-colour red
set -g clock-mode-style 24

# Message
set -g message-bg default
set -g message-fg default

# Command message
set -g message-command-bg default
set -g message-command-fg default

# Mode
set -g mode-bg red
set -g mode-fg default



# set -g status-left ' #H:#S '
# set -g status-right ''
# setw -g window-status-format ' #I #W '
# setw -g window-status-attr bold
## tmux window titling for X
# set -g set-titles on
# set -g set-titles-string '[#I] #S > #W'


# Highlight active window
# setw -g window-status-current-bg '#eeeeee'
# setw -g window-status-current-fg '#444444'

# setw -g window-status-bg '#333333'
# setw -g window-status-fg '#999999'

## pane border and colors
# set -g pane-active-border-fg colour240
# set -g pane-border-fg colour240

# Status bar
# set -g status-bg '#333333'
# set -g status-fg '#ffffff'
# set -g status-left-length 70
# set -g status-left-bg '#777777'
# set -g status-left-fg '#222222'
# refresh 'status-left' and 'status-right' more often

# set -g message-bg red
# set -g message-fg yellow

# set -g mode-bg '#ff00ff'
# set -g mode-fg '#000000'

# messages
# set -g message-fg colour229
# set -g message-bg "#111111"
# set -g display-time 4000





