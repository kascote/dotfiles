#require '~/.irb/irb/gem_loader'
#require '~/.irb/irb/awesome_print_loader'

Pry.config.editor = "mvim --nofork"

#if defined?(Rails) && Rails.env
#  require 'logger'
#
#  if defined?(ActiveRecord)
#    ActiveRecord::Base.logger = Logger.new(STDOUT)
#    ActiveRecord::Base.clear_active_connections!
#  end
#
#  if defined?(DataMapper)
#    DataMapper::Logger.new($stdout, :debug)
#  end
#end


#Pry.config.pager = false
Pry.config.color = true
Pry.config.history.should_save = true
Pry.config.should_load_local_rc = Dir.pwd != Dir.home

if Readline::VERSION =~ /editline/i
  warn "Warning: Using Editline instead of Readline."
end

# wrap ANSI codes so Readline knows where the prompt ends
def colour(name, text)
  if Pry.color
    "\001#{Pry::Helpers::Text.send name, '{text}'}\002".sub '{text}', "\002#{text}\001"
  else
    text
  end
end

=begin
Pry.prompt = [
  proc { |obj, nest_level| "#{RUBY_VERSION} (#{obj}):#{nest_level} > " },
  proc { |obj, nest_level| "#{RUBY_VERSION} (#{obj}):#{nest_level} * " }
]
=end

Pry.config.prompt = [
  proc { |target_self, nest_level, pry|
    prompt = colour :bright_black, "#{RUBY_VERSION} - #{Pry.view_clip(target_self)}"
    prompt += ":#{nest_level}" if nest_level > 0
    prompt += colour :cyan, ' Â» '
  },
  proc { |target_self, nest_level, pry|
    colour :red, '?> '
  }
]

org_logger_active_record=nil
org_logger_rails=nil

Pry.hooks.add_hook :before_session, :rails do |output, target, pry|
  # show ActiveRecord SQL queries in the console
  if defined? ActiveRecord
    org_logger_active_record = ActiveRecord::Base.logger
    ActiveRecord::Base.logger = Logger.new STDOUT
  end

  if defined?(Rails) && Rails.env
    # output all other log info such as deprecation warnings to the console
    if Rails.respond_to? :logger=
      org_logger_rails = Rails.logger
      Rails.logger = Logger.new STDOUT
    end
  end
end

Pry.hooks.add_hook :after_session, :rails do |output, target, pry|
  ActiveRecord::Base.logger = org_logger_active_record if org_logger_active_record
  Rails.logger = org_logger_rails if org_logger_rails
end

if defined?(PryByebug)
  Pry.commands.alias_command 'cc', 'continue'
  Pry.commands.alias_command 'ss', 'step'
  Pry.commands.alias_command 'nn', 'next'
  Pry.commands.alias_command 'ff', 'finish'
end


# coding:utf-8 vim:ft=ruby
